=======
numbers
=======

filter 1234567890
| filter -1237823
| filter 1.23
| filter -1.23

---

(query
  (filter_command
    condition: (expr
      (number)))
  (filter_command
    condition: (expr
      (number)))
  (filter_command
    condition: (expr
      (number)))
  (filter_command
    condition: (expr
      (number))))

=======
strings
=======

filter ''
| filter 'some string'

---

(query
  (filter_command
    condition: (expr
      (string)))
  (filter_command
    condition: (expr
      (string))))

==========
timestamps
==========

filter @'now'
| filter @'2025-02-16T01:41:07Z'

---

(query
  (filter_command
    condition: (expr
      (timestamp_literal
       (string))))
  (filter_command
    condition: (expr
      (timestamp_literal
       (string)))))

========
keypaths
========

filter path
| filter path.path2.path3.path4

---

(query
  (filter_command
    condition: (expr
      (keypath
        (ident))))
  (filter_command
    condition: (expr
      (keypath
        (ident)
        (ident)
        (ident)
        (ident)))))

=========
functions
=========

filter function()
| filter function(arg1, arg2)

---

(query
  (filter_command
    condition: (expr
      (function
        name: (ident))))
  (filter_command
    condition: (expr
      (function
        name: (ident)
	argument: (expr
	  (keypath
	    (ident)))
	argument: (expr
	  (keypath
	    (ident)))))))

=========
intervals
=========

filter 1s
| filter 2m
| filter 3h
| filter 4d

---

(query
  (filter_command
    condition: (expr
      (interval
        (number))))
  (filter_command
    condition: (expr
      (interval
        (number))))
  (filter_command
    condition: (expr
      (interval
        (number))))
  (filter_command
    condition: (expr
      (interval
        (number)))))

=========
typecasts
=========

filter path:type
| filter path.path:type

---

(query
  (filter_command
    condition: (expr
      (type_cast
        keypath: (keypath
	  (ident))
	type: (type))))
  (filter_command
    condition: (expr
      (type_cast
        keypath: (keypath
	  (ident)
	  (ident))
	type: (type)))))

=====
cases
=====

filter case {
  expr -> value
}
| filter case_contains {
  value,
  expr -> value
}

---

(query
  (filter_command
    condition: (expr
      (case
        value: (expr
          (keypath
            (ident)))
        result: (expr
          (keypath
            (ident))))))
  (filter_command
    condition: (expr
      (case
        compare: (expr
          (keypath
            (ident)))
        value: (expr
          (keypath
            (ident)))
        result: (expr
          (keypath
            (ident)))))))
