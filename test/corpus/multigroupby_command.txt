============
multigroupby
============

multigroupby (expr) aggregate count()

---

(query
  (multigroupby_command
    group: (multigroupby_group
      grouping: (key))
    aggregation: (call_expression
      function: (key)
      arguments: (arguments))))

===========================
multigroupby multiple group
===========================

multigroupby (expr, expr), (expr, expr) aggregate count()

---

(query
  (multigroupby_command
    group: (multigroupby_group
      grouping: (key)
      grouping: (key))
    group: (multigroupby_group
      grouping: (key)
      grouping: (key))
    aggregation: (call_expression
      function: (key)
      arguments: (arguments))))

======================================
multigroupby multiple group with alias
======================================

multigroupby (expr as alias, expr as alias), (expr as alias, expr as alias) aggregate count()

---

(query
  (multigroupby_command
    group: (multigroupby_group
      grouping: (key)
      alias: (key)
      grouping: (key)
      alias: (key))
    group: (multigroupby_group
      grouping: (key)
      alias: (key)
      grouping: (key)
      alias: (key))
    aggregation: (call_expression
      function: (key)
      arguments: (arguments))))

======================================
multigroupby with multiple aggregation
======================================

multigroupby (expr) aggregate count(), count()

---

(query
  (multigroupby_command
    group: (multigroupby_group
      grouping: (key))
    aggregation: (call_expression
      function: (key)
      arguments: (arguments))
    aggregation: (call_expression
      function: (key)
      arguments: (arguments))))

=================================================
multigroupby with multiple aggregation with alias
=================================================

multigroupby (expr) aggregate count() as alias, count() as alias

---

(query
  (multigroupby_command
    group: (multigroupby_group
      grouping: (key))
    aggregation: (call_expression
      function: (key)
      arguments: (arguments))
    alias: (key)
    aggregation: (call_expression
      function: (key)
      arguments: (arguments))
    alias: (key)))
